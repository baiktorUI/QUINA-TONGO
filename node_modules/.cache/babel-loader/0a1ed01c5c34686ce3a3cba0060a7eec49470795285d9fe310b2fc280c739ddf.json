{"ast":null,"code":"var _jsxFileName = \"/Users/vgarciap/Desktop/bingo-app/src/Bingo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Bingo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bingo = () => {\n  _s();\n  // Estado para guardar los números clicados y el número en pantalla grande\n  const [clickedNumbers, setClickedNumbers] = useState(new Set());\n  const [displayClickedNumber, setDisplayClickedNumber] = useState(null);\n\n  // Función para manejar el clic en un número\n  const handleNumberClick = number => {\n    setClickedNumbers(prev => new Set(prev).add(number)); // Añadir número al conjunto de clicados\n    setDisplayClickedNumber(number); // Mostrar el número en grande\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bingo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-table\",\n      children: [...Array(50).keys()].map(i => {\n        const number = i + 1;\n        const isClicked = clickedNumbers.has(number);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleNumberClick(number),\n          className: `number-cell ${isClicked ? 'clicked' : 'unsorted'}`,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clicked-number-display\",\n      children: displayClickedNumber !== null ? displayClickedNumber : 'Haz clic en un número'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Bingo, \"Zd/EUku1fMAsuxUTZWqIS++yOMw=\");\n_c = Bingo;\nexport default Bingo;\nvar _c;\n$RefreshReg$(_c, \"Bingo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Bingo","_s","clickedNumbers","setClickedNumbers","Set","displayClickedNumber","setDisplayClickedNumber","handleNumberClick","number","prev","add","className","children","Array","keys","map","i","isClicked","has","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vgarciap/Desktop/bingo-app/src/Bingo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Bingo.css';\n\nconst Bingo = () => {\n  // Estado para guardar los números clicados y el número en pantalla grande\n  const [clickedNumbers, setClickedNumbers] = useState(new Set());\n  const [displayClickedNumber, setDisplayClickedNumber] = useState(null);\n\n  // Función para manejar el clic en un número\n  const handleNumberClick = (number) => {\n    setClickedNumbers((prev) => new Set(prev).add(number)); // Añadir número al conjunto de clicados\n    setDisplayClickedNumber(number); // Mostrar el número en grande\n  };\n\n  return (\n    <div className=\"bingo-container\">\n      {/* Tabla de números */}\n      <div className=\"number-table\">\n        {[...Array(50).keys()].map(i => {\n          const number = i + 1;\n          const isClicked = clickedNumbers.has(number);\n\n          return (\n            <div \n              key={number} \n              onClick={() => handleNumberClick(number)}\n              className={`number-cell ${isClicked ? 'clicked' : 'unsorted'}`}\n            >\n              {number}\n            </div>\n          );\n        })}\n      </div>\n      {/* Mostrar el número clicado en grande */}\n      <div className=\"clicked-number-display\">\n        {displayClickedNumber !== null ? displayClickedNumber : 'Haz clic en un número'}\n      </div>\n    </div>\n  );\n};\n\nexport default Bingo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAIO,GAAG,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtE;EACA,MAAMU,iBAAiB,GAAIC,MAAM,IAAK;IACpCL,iBAAiB,CAAEM,IAAI,IAAK,IAAIL,GAAG,CAACK,IAAI,CAAC,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC;IACxDF,uBAAuB,CAACE,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAE9Bb,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI;QAC9B,MAAMR,MAAM,GAAGQ,CAAC,GAAG,CAAC;QACpB,MAAMC,SAAS,GAAGf,cAAc,CAACgB,GAAG,CAACV,MAAM,CAAC;QAE5C,oBACET,OAAA;UAEEoB,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACC,MAAM,CAAE;UACzCG,SAAS,EAAE,eAAeM,SAAS,GAAG,SAAS,GAAG,UAAU,EAAG;UAAAL,QAAA,EAE9DJ;QAAM,GAJFA,MAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKR,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENxB,OAAA;MAAKY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCP,oBAAoB,KAAK,IAAI,GAAGA,oBAAoB,GAAG;IAAuB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCID,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}